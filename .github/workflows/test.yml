name: Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> "$GITHUB_OUTPUT"
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> "$GITHUB_OUTPUT"
          else
            echo "manager=npm" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ steps.detect.outputs.manager }}

      - name: Install dependencies
        run: |
          if [ "${{ steps.detect.outputs.manager }}" = "pnpm" ]; then
            corepack enable
            pnpm install --frozen-lockfile
          elif [ "${{ steps.detect.outputs.manager }}" = "yarn" ]; then
            yarn install --frozen-lockfile
          else
            npm ci
          fi

      - name: Run lint and tests
        run: |
          if [ "${{ steps.detect.outputs.manager }}" = "pnpm" ]; then
            pnpm run lint
            pnpm test -- --coverage
          elif [ "${{ steps.detect.outputs.manager }}" = "yarn" ]; then
            yarn lint
            yarn test --coverage
          else
            npm run lint
            npm test -- --coverage
          fi

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage
