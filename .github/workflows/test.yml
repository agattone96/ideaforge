name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> "$GITHUB_OUTPUT"
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> "$GITHUB_OUTPUT"
          else
            echo "manager=npm" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ steps.detect.outputs.manager }}

      - name: Install dependencies
        run: |
          case "${{ steps.detect.outputs.manager }}" in
            pnpm)
              corepack enable
              pnpm install --frozen-lockfile
              ;;
            yarn)
              yarn install --frozen-lockfile
              ;;
            *)
              npm ci
              ;;
          esac

      - name: Lint code
        run: |
          if [ "${{ steps.detect.outputs.manager }}" = "pnpm" ]; then
            pnpm run lint
          elif [ "${{ steps.detect.outputs.manager }}" = "yarn" ]; then
            yarn lint
          else
            npm run lint
          fi

      - name: Run tests with coverage
        run: |
          if [ "${{ steps.detect.outputs.manager }}" = "pnpm" ]; then
            pnpm test -- --coverage
          elif [ "${{ steps.detect.outputs.manager }}" = "yarn" ]; then
            yarn test --coverage
          else
            npm test -- --coverage
          fi

      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage/